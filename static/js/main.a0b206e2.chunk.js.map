{"version":3,"sources":["serviceWorker.js","Componets/TodoInput.js","Componets/TodoItems.js","Componets/App.js","index.js"],"names":["Boolean","window","location","hostname","match","TodoInput","state","focus","id","NaN","atTop","file","content","completed","date","comment","clearState","_this","setState","onSubmithandler","_callee","ev","response","regenerator_default","a","wrap","_context","prev","next","preventDefault","axios","get","sent","data","props","getInputData","stop","onChangehandler","Object","defineProperty","target","name","value","_this$props","this","prevProps","prevState","_this$props2","comparePrevDiff","react_default","createElement","Card","fluid","Content","Form","widths","onSubmit","Grid","verticalAlign","textAlign","Column","width","Icon","link","size","style","display","concat","Input","action","icon","actionPosition","onFocus","onFocusHandler","bind","onChange","marginLeft","Group","inline","type","placeholder","Row","Button","TextArea","rows","className","marginTop","positive","onClick","negative","onBlurHandler","renderForm","React","Component","TodoLists","_ref","todos","IconClickHandler","List","relaxed","divided","map","todo","Item","key","floated","data-iconname","data-itemid","color","Header","basic","App","show","editTodo","newtodos","toConsumableArray","isNaN","Date","now","push","idx","findIndex","item","splice","updateCompleted","assign","updateAtTop","unshift","editExistTodos","deleteTodo","onIconClickHandler","parseInt","currentTarget","dataset","itemid","iconname","menuItemClick","e","filterTodos","_this$state","filter","Container","margin","as","Divider","Menu","pointing","secondary","active","stackable","centered","Componets_TodoInput","ReactDOM","render","Componets_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0b206e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { Form, Icon,Grid, TextArea,Card,Button } from 'semantic-ui-react';\n\n\nclass TodoInput extends React.Component{\n\n    state = { \n      focus:'none',\n      id:NaN,\n      atTop: false,\n      file: false,\n      'content': '',\n      'completed': false,\n      'date': '',\n      'comment': '',\n    };\n\n    comparePrevDiff(prev){\n      const {comment,content,date} = this.props;\n      if(content === '')\n        return false;\n      if(comment === prev['comment'] &&\n         content === prev['content'] &&\n         date === prev['date']\n        ){\n          return false;\n        }else{\n          return true;\n        }\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n      const {id,atTop,comment,completed,content,date,file} = this.props;\n      \n      if(this.comparePrevDiff(prevProps) \n          ){\n          /*\n          console.log('props.content',content);\n          console.log('prevProps.content',prevProps.content);\n          console.log('prevState.content',prevState.content);*/\n        this.setState({\n          focus:'block',\n          id:id,\n          atTop: atTop,\n          file: file,\n          'content': content,\n          'completed': completed,\n          'date': date,\n          'comment': comment,\n        });\n      }\n    }\n\n    clearState = ()=>{\n      this.setState({\n        focus:'none',\n        id:NaN,\n        atTop: false,\n        file: false,\n        'content': '',\n        'completed': false,\n        'date': '',\n        'comment': '',\n      });\n    }\n\n    onSubmithandler = async (ev) => {\n      ev.preventDefault();\n\n      if(this.state['content']===''){\n        const response = await axios.get('https://api.github.com/zen');\n        this.setState({'content':response.data});\n      }\n      this.props.getInputData(this.state);\n      this.clearState();\n    }\n\n    onChangehandler = (ev)=>{\n      this.setState({[ev.target.name]:ev.target.value});\n    }\n\n    onFocusHandler(){\n      this.setState({focus:'block'});\n    }\n\n    onBlurHandler(){\n      this.setState({focus:'none'});\n    }\n\n    renderForm(){\n\n      return(\n        <Card fluid >\n        <Card.Content>\n        <Form widths='equal' onSubmit={this.onSubmithandler} >\n\n            <Grid verticalAlign='middle' textAlign='justified'>\n            <Grid.Column width='1'>\n            <Icon link size='big' name='square outline' style={{display:`${this.state.focus}`}}/>\n            </Grid.Column>\n            <Grid.Column width='13'>\n            <Form.Input size='huge' fluid\n              name='content'\n              value={this.state['content']}\n              action={{ icon: 'add' }}\n              actionPosition='left'\n              onFocus={this.onFocusHandler.bind(this)}\n              onChange={this.onChangehandler}/>\n            </Grid.Column>\n            <Grid.Column width='2'>\n            <Icon link size='big' name='star outline' style={{display:`${this.state.focus}`}}/>\n            </Grid.Column>\n            </Grid>\n\n            <Grid textAlign='left' style={{marginLeft:'20px', display:`${this.state.focus}`}}>\n            <Grid.Column width='16'>\n              <Icon  name=\"calendar outline\" size='large' /><b>Due Date </b>\n              <Form.Group inline>\n                <Form.Input fluid\n                  type='date'\n                  placeholder='yyyy:MM:dd'\n                  name='date'\n                  value={this.state['date']}\n                  onChange={this.onChangehandler}/>\n                <Form.Input fluid placeholder='hh:mm' type='time' name='date-end' />\n              </Form.Group>\n            </Grid.Column>\n            <Grid.Row>\n              <Grid.Column width='3'>\n                <Icon name=\"file outline\" size='large' /><b>FILE </b>\n                <Form.Button icon={{name:'add square'}} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Column width='16'>\n              <Icon  name=\"comment outline\"  size='large' /><b>Comment </b>\n              <TextArea\n                rows='3'\n                placeholder='Add comment here'\n                name='comment'\n                value={this.state['comment']}\n                onChange={this.onChangehandler}\n                />\n            </Grid.Column >\n          </Grid>\n        </Form>\n\n        </Card.Content>\n          <div className='ui two buttons ' style={{marginTop: '16px', display:`${this.state.focus}`}}>\n          <Button  positive onClick={this.onSubmithandler.bind(this)}> Accpet</Button>\n          <Button  negative onClick={this.onBlurHandler.bind(this)}> Cancel</Button>\n          </div>\n        </Card>\n\n      );\n    }\n\n    render(){\n      return(\n        this.renderForm()\n      );\n    }\n}\n\nexport default TodoInput;\n","import React from 'react';\nimport { List,Button, Icon } from 'semantic-ui-react';\n\nexport function TodoLists({todos,IconClickHandler}) {\n    return (\n      <List size=\"big\" relaxed='very' verticalAlign='middle' divided>\n        {todos.map((todo)=>{return(\n          <List.Item key={todo.id}>\n            <List.Content floated='right' >\n                <List.Icon link\n                  name='edit outline'\n                  size='big'\n                  data-iconname='edit'\n                  data-itemid={todo.id}\n                  onClick={IconClickHandler}/>\n                <List.Icon link\n                  name={todo.atTop? 'star':'star outline' }\n                  color={todo.atTop? 'yellow':'black'}\n                  size='big'\n                  data-iconname='atTop'\n                  data-itemid={todo.id}\n                  onClick={IconClickHandler}/>\n            </List.Content>\n\n            <List.Icon\n               link\n               size='large'\n               name={todo.completed?'check square outline':'square outline'}\n               data-iconname='completed'\n               data-itemid={todo.id}\n               onClick={IconClickHandler}/>\n            <List.Content verticalAlign='middle'>\n                <List.Header > {todo.content}\n                  <Button basic icon\n                    floated='right'\n                    data-itemid={todo.id}\n                    data-iconname='delete'\n                    onClick={IconClickHandler}>\n                      <Icon name='delete' color='red'/>\n                  </Button>\n                </List.Header >\n            </List.Content>\n            <List.Content style={{marginLeft:'2rem', marginTop:'.5rem'}}>\n                {todo.date?<List.Icon  name=\"calendar outline\"/>   :''}{todo.date}\n                {todo.file?<List.Icon  name=\"file outline\"  />:''}\n                {todo.comment?<List.Icon  name=\"comment outline\" />:''}\n            </List.Content>\n          </List.Item>\n        )})}\n      </List>\n\n    );\n}\n\n","import React from 'react';\nimport {\n  Container,Divider,\n  Grid,Header, Menu} from 'semantic-ui-react';\n\nimport TodoInput from './TodoInput';\nimport {TodoLists} from './TodoItems';\n//import  TodoLists  from './TodoLists';\n\n\n/*\none todo has\n1. content\n1-1. id(private)\n----- n: outline\n2. edit, y:blue,\n3. completed, y: gold,\n4. atTop y: gold,\n5. date, file, comment, y:exist, n: no show\n */\n\nclass App extends React.Component{\n//class TabContent extends React.Component{\n  state={\n    todos:[],\n    show:'My Task',\n    editTodo: {\n      id:NaN,\n      content:'',\n      completed:false,\n      atTop:false,\n      date:'',\n      file:false,\n      comment:'',\n    },\n  };\n\n  getInputData = (data)=>{\n    let todo={};\n    let newtodos=[...this.state.todos];\n    todo.id = data.id;\n    todo.content=data['content'];\n    todo.completed=data['completed'];\n    todo.atTop=data.atTop;\n    todo.date=data['date'];\n    todo.file=data.file;\n    todo.comment=data['comment'];\n    if(isNaN(data.id)){\n      todo.id=Date.now();\n      newtodos.push(todo);  \n    }else{\n      let idx=this.state.todos.findIndex((item)=>item.id===data.id);\n      newtodos.splice(idx,1,todo);\n    }\n    this.setState({todos: newtodos});\n  }\n\n  updateCompleted = (name,idx)=>{\n    let newtodos=[...this.state.todos];\n    let todo=Object.assign({},this.state.todos[idx]);\n    todo[name]=!todo[name];\n    newtodos.splice(idx,1);\n    newtodos.push(todo);\n    this.setState({todos: newtodos});\n  }\n\n  updateAtTop = (name,idx) =>{\n    let newtodos=[...this.state.todos];\n    let todo=Object.assign({},this.state.todos[idx]);\n    todo[name]=!todo[name];\n    newtodos.splice(idx,1);\n    newtodos.unshift(todo);\n    this.setState({todos: newtodos});\n  }\n\n  editExistTodos = (idx)=>{\n    let todo=Object.assign({},this.state.todos[idx]);\n    this.setState({editTodo:todo});\n  }\n\n  deleteTodo = (idx)=>{\n    let newtodos=[...this.state.todos];\n    newtodos.splice(idx,1);\n    this.setState({todos: newtodos});\n  }\n\n  onIconClickHandler = (ev)=>{\n    let id=parseInt(ev.currentTarget.dataset.itemid);\n    let idx=this.state.todos.findIndex((item)=>item.id===id);\n\n    switch(ev.currentTarget.dataset.iconname){\n      case 'completed':\n        this.updateCompleted('completed',idx);\n      break;\n      case 'atTop':\n        this.updateAtTop('atTop',idx);\n      break;\n      case 'edit':\n        this.editExistTodos(idx);\n      break;\n      case 'delete':\n        this.deleteTodo(idx);\n      break;\n      default:\n      break;\n    }\n  }\n\n  menuItemClick = (e,{name})=>(this.setState({show:name}))\n\n  filterTodos = ()=>{\n    const {show, todos} = this.state;\n    if(show === 'My Task')\n      return todos;\n    if(show === 'In Progress')\n      return todos.filter((todo)=>!todo.completed);\n    if(show === 'Completed')\n      return todos.filter((todo)=>todo.completed);\n  }\n\n  render() {\n  return (\n    <Container style={{margin:'3rem auto'}}>\n      <Header as='h2'>Semantic UI React TodoList version</Header>\n      <Divider />\n      <Menu widths='12' pointing secondary>\n        <Menu.Item\n          name='My Task'\n          active={this.state.show === 'My Task'}\n          onClick={this.menuItemClick}/>\n        <Menu.Item\n          name='In Progress'\n          active={this.state.show === 'In Progress'}\n          onClick={this.menuItemClick}/>\n        <Menu.Item\n          name='Completed'\n          active={this.state.show === 'Completed'}\n          onClick={this.menuItemClick}/>\n      </Menu>\n\n      <Grid stackable centered  >\n\n        <Grid.Column  width={10} >\n            <TodoInput getInputData={this.getInputData }  {...this.state.editTodo} />\n        </Grid.Column>\n\n        <Grid.Column width={10}>\n           <TodoLists\n             todos={this.filterTodos(this.props.completed)}\n             IconClickHandler={this.onIconClickHandler.bind(this)}/>\n        </Grid.Column>\n\n      </Grid>\n    </Container>\n\n  );\n  }\n}\n/*\nconst panes = [\n  {\n    menuItem:'My Task',\n    pane:{\n      key:'mytask',\n      content:(<TabContent logo='My Task'/>),\n    }\n  },\n  {\n    menuItem:'In progress',\n    pane:{\n      key:'inprogress',\n      content:(<TabContent logo='In progress' completed={false}/>),\n    }\n  },\n  {\n    menuItem:'Completed',\n    pane:{\n      key:'completed',\n      content:(<TabContent logo='Completed' completed={true} />),\n    }\n  },\n]\n*/\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './Componets/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}